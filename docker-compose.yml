version: '3.8'
services:
  postgres:
    image: postgres:alpine
    container_name: safari-db
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: safari
      POSTGRES_PASSWORD: postgres
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./src/main/resources:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_LOG_MODE=console file
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    ports:
      - "9187:9187"
    depends_on:
      - postgres
      - prometheus
  applicationTest:
    image: test-image-build:latest
    container_name: application
    ports:
      - "8081:8081"
    environment:
       POSTGRES_USER: postgres
       POSTGRES_PASSWORD: postgres
       SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/safari
       SPRING_DATASOURCE_USERNAME: postgres
       SPRING_DATASOURCE_PASSWORD: postgres
       SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - postgres
  sonar:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
       SONARQUBE_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
       SONARQUBE_JDBC_USERNAME: postgres
       SONARQUBE_JDBC_PASSWORD: postgres
    volumes:
      - ./sonarData:/opt/sonarqube/data
    depends_on:
      - postgres